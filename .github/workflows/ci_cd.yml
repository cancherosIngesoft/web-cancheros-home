name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - main
      - develop

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Run Jest tests
        run: npm test -- --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # Primero sincronizamos las variables otra vez
      - name: Sync Environment Variables
        run: |
          vercel env add NEXT_PUBLIC_AUTH_SECRET production "${{ secrets.NEXT_PUBLIC_AUTH_SECRET }}" --token=${{ secrets.VERCEL_TOKEN }} -y
          vercel env add NEXT_PUBLIC_AUTH0_ISSUER production "${{ secrets.NEXT_PUBLIC_AUTH0_ISSUER }}" --token=${{ secrets.VERCEL_TOKEN }} -y
          vercel env add NEXT_PUBLIC_AUTH0_CLIENT_ID production "${{ secrets.NEXT_PUBLIC_AUTH0_CLIENT_ID }}" --token=${{ secrets.VERCEL_TOKEN }} -y
          vercel env add NEXT_PUBLIC_AUTH0_CLIENT_SECRET production "${{ secrets.NEXT_PUBLIC_AUTH0_CLIENT_SECRET }}" --token=${{ secrets.VERCEL_TOKEN }} -y
          vercel env add NEXT_PUBLIC_AUTH0_BASE_URL production "${{ secrets.NEXT_PUBLIC_AUTH0_BASE_URL }}" --token=${{ secrets.VERCEL_TOKEN }} -y
          vercel env add NEXT_PUBLIC_API_URL production "${{ secrets.NEXT_PUBLIC_API_URL }}" --token=${{ secrets.VERCEL_TOKEN }} -y
          vercel env add NEXT_PUBLIC_NEXTAUTH_URL production "${{ secrets.NEXT_PUBLIC_NEXTAUTH_URL }}" --token=${{ secrets.VERCEL_TOKEN }} -y

      # Luego hacemos pull de la información
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # Después construimos
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      # Finalmente desplegamos
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  deploy-preview:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
